---
#A Gateway configures a load balancer for HTTP/TCP traffic, 
#most commonly operating at the edge of the mesh to enable ingress traffic for an application.
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: brandsource-routebyhdr-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
#A VirtualService defines the rules that control how requests for a service are routed within an Istio service mesh.
#attempts: 2 - number of attempts possible within the default or overridden timeout period (10s)

#all requests for the brandssource service that includes a header 
#named “user-agent” with the value ".*Safari.*" will be sent to the “version-2” instances.
#All remaining requests will be sent to “version-1”:
      
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: brandsource-routebyhdr-vservice
spec:
  hosts:
  - "*"
  gateways:
  - brandsource-routebyhdr-gateway
  http:
  - match:
    - headers:
        user-agent:
          regex: ".*Safari.*"
    route:
    - destination:
        host: brandssource
        subset: version-2
    timeout: 10s
    retries:
        attempts: 2
        perTryTimeout: 5s
    
  - route:
    - destination:
        host: brandssource
        subset: version-1
    timeout: 10s
    retries:
        attempts: 2
        perTryTimeout: 5s

---
#A DestinationRule configures the set of policies to be applied to a request after VirtualService routing has occurred.
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: ds-routebyhdr
spec:
  host: brandssource
  trafficPolicy:
    loadBalancer:
      simple: RANDOM
  subsets:
  - name: version-1
    labels:
      version: brandssource-version-1
  - name: version-2
    labels:
      version: brandssource-version-2
    
    
    


      
